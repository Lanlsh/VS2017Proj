#! /bin/sh
if test -d config ; then
	if test -f config/modules ; then
		tmp=`cat config/modules`
		modules=`ls -d $tmp`
	else
		for dir in `ls`; do
			if test -d $dir ; then
				modules="$modules $dir"
			fi
		done
	fi
	modules=`echo $modules | sed -e "s/config//g" | sed -e "s/CVS//g"`
	modules="config $modules doxygen"
else
	echo "Cannot find configure directory (config or ../config)"
	exit 1
fi
if test "x--help" = "x$*"; then
	config/configure --help
elif test "x--help=short" = "x$*"; then
	config/configure --help=short
elif test "x--help=recursive" = "x$*"; then
	config/configure --help=recursive
elif test "x--version" = "x$*"; then
	config/configure --version
elif test "x-h" = "x$*"; then
	config/configure -h
elif test "x-V" = "x$*"; then
	config/configure -V
else
	args=""
	ok=0
	while [ $# -gt 0 ]; do
		if test "x--ignore-deprecation" = "x$1"; then
			ok=1
		else
			args="$args $1"
		fi
		shift
	done
	if [ $ok -eq 0 ]; then
		echo ""
		echo "== DEPRECATION WARNING =="
		echo ""
		echo "Configuring DCMTK via GNU Autoconf is deprecated and will be removed.  Please have"
		echo "a look at CMake, which we now consider equally mature.  If you run into serious"
		echo "problems using CMake or strongly prefer GNU Autoconf for some other reason write"
		echo "an email to the"
		echo ""
		echo "  DCMTK Team <bugs@dcmtk.org>"
		echo ""
		echo "and use"
		echo ""
		echo "  ./configure --ignore-deprecation"
		echo ""
		echo "to run the old configure script anyway."
		echo ""
		exit 1
	fi
	for module in $modules ; do
		echo "Running configure for module $module."
		if test ! -x "$module/configure" ; then
			echo "Module $module does not contain a configure script!" >&2
			exit 1
		fi
		(cd $module && ./configure $args ) || exit 1
	done
fi
